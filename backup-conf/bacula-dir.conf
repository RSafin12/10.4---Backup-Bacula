
Director {                                      # define myself
  Name = brave-dir                              # имя Директора
  DIRport = 9101                                # какой порт слушать (используется значение по умолчанию)
  QueryFile = "/etc/bacula/scripts/query.sql"   # путь к сценарию, содержащему sql запросы для работы с Bacula Catalog
  WorkingDirectory = "/var/lib/bacula"          # папка в которой лежат статус-файлы Директора
  PidDirectory = "/run/bacula"                  # pid-файл демона Директора
  Maximum Concurrent Jobs = 20                  # Максимальное количество выполняемых заданий.
  Password = "0pJCO_jW8SYGeB5FLgpImlONjmoYJS0Ct"         # Console password
  Messages = Daemon                             # Конфигурация параметров уведомлений (описано в секции Messages)
  DirAddress = 127.0.0.1                        # fqdn имя или IP-адрес Директора
}

# Define the main nightly save backup job
#   By default, this job will back up to disk in /nonexistant/path/to/file/archive/dir
Job {
  Name = "BackupClient"        # Слэш нужно всегда экранировать, или можно использовать бэкслэш
  JobDefs = "DefaultJob"
}

JobDefs {
  Name = "DefaultJob"         # Имя задания
  Type = Backup               # Тип задания (backup, restore и т.д.)    
  Level = Full         # Уровень бэкапа (Full, Incremental, Differential и т.п)
  Client = brave-fd           # Имя клиента на котором выполняется задание
  FileSet = "Full Set"        # Набор файлов для выполнения задания
  Schedule = "WeeklyCycle"    # Расписание выполнения задания
  Storage = File1             # Файловое хранилище
  Messages = Standard         # Поведение уведомлений
  Pool = File                 # Пул, куда будем писать бэкапы. 
# Если мы хотим сделать отдельный пул для каждого клиента,
# или использовать префиксы, тогда пул указывается в задании для каждого клиента переопределяя тем самым эту настройку
  SpoolAttributes = yes       # Буферизация атрибутов файлов
  Priority = 10               # Приоритет. Давая заданиям приоритеты от 1 до 10, можно регулировать последовательность их выполнения.
  Write Bootstrap = "/var/lib/bacula/%c.bsr"  # Файл хранит информацию откуда извлекать данные при восстановлении
}

#Job {
#  Name = "BackupClient2"
#  Client = brave2-fd
#  JobDefs = "DefaultJob"
#}

#Job {
#  Name = "BackupClient1-to-Tape"
#  JobDefs = "DefaultJob"
#  Storage = LTO-4
#  Spool Data = yes    # Avoid shoe-shine
#  Pool = Default
#}

#}

# Backup the catalog database (after the nightly save)
Job {
  Name = "BackupCatalog"
  JobDefs = "DefaultJob"
  Level = Full
  FileSet="Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  RunBeforeJob = "/etc/bacula/scripts/make_catalog_backup.pl MyCatalog"
  # This deletes the copy of the catalog
  RunAfterJob  = "/etc/bacula/scripts/delete_catalog_backup"
  Write Bootstrap = "/var/lib/bacula/%n.bsr"
  Priority = 11                   # run after main backup
}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#
Job {
  Name = "RestoreFiles"
  Type = Restore
  Client=brave-fd
  Storage = File1
# The FileSet and Pool directives are not used by Restore Jobs
# but must not be removed
  FileSet="Full Set"
  Pool = File
  Messages = Standard
  Where = /nonexistant/path/to/file/archive/dir/bacula-restores
}


# List of files to be backed up
FileSet {
  Name = "Full Set"
  Include {
    Options {
      signature = MD5
    }
#
#  Put your list of files here, preceded by 'File =', one per line
#    or include an external list with:
#
#    File = <file-name
#
#  Note: / backs up everything on the root partition.
#    if you have other partitions such as /usr or /home
#    you will probably want to add them too.
#
#  By default this is defined to point to the Bacula binary
#    directory to give a reasonable FileSet to backup to
#    disk storage during initial testing.
#
    File = /usr/sbin
  }

#
# If you backup the root directory, the following two excluded
#   files can be useful
#
  Exclude {
    File = /var/lib/bacula
    File = /nonexistant/path/to/file/archive/dir
    File = /proc
    File = /tmp
    File = /sys
    File = /.journal
    File = /.fsck
  }
}

#
# When to do the backups, full backup on first sunday of the month,
#  differential (i.e. incremental since full) every other sunday,
#  and incremental backups other days
Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sun at 23:05               # Тип бекапа, периодичность и время запуска
  Run = Differential 2nd-5th sun at 23:05   # Тип бекапа, периодичность и время запуска
  Run = Incremental mon-sat at 23:05        # Тип бекапа, периодичность и время запуска
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup" 
  Run = Full sun-sat at 23:10               # Тип бекапа, периодичность и время запуска
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {                          # Секция содержит пути к резервируемым файлам/каталогам
    Options {                        # Секция определяющая параметры резервирования файлов/каталогов
      signature = MD5                # создается сигнатура забекапленных файлов в md5
    }
    File = "/var/lib/bacula/bacula.sql" 
  }
}

# Client (File Services) to backup
Client {
  Name = brave-fd                     # имя Клиента
  Address = localhost                 # fqdn имя или IP-адрес Клиента
  FDPort = 9102                       # порт, который клиент слушает
  Catalog = MyCatalog                 # имя PostgreSQL базы данных Bacula
  Password = "HeEjNzWZaSUHE9q2PR2yl4i41yR1RcOiL"          # password for FileDaemon
  File Retention = 60 days            # период, в течении которого информация о ФАЙЛАХ хранится в базе данных
  Job Retention = 6 months            # период, в течении которого информация о ЗАДАНИЯХ хранится в базе данных
  AutoPrune = yes                     # удалять записи из Bacula Catalog старше вышеуказанных значений
}

#
# Second Client (File Services) to backup
#  You should change Name, Address, and Password before using
#
#Client {
#  Name = brave2-fd
#  Address = localhost2
#  FDPort = 9102
#  Catalog = MyCatalog
#  Password = "HeEjNzWZaSUHE9q2PR2yl4i41yR1RcOiL2"        # password for FileDaemon 2
#  File Retention = 60 days           # 60 days
#  Job Retention = 6 months           # six months
#  AutoPrune = yes                    # Prune expired Jobs/Files
#}


# Definition of file Virtual Autochanger device
Autochanger {
  Name = File1
# Do not use "localhost" here
  Address = localhost                # N.B. Use a fully qualified name here
  SDPort = 9103
  Password = "JVhZQ-8Z0gCxc0fU7VNNTYzLRyFwiL58E"
  Device = FileChgr1
  Media Type = File1
  Maximum Concurrent Jobs = 10        # run up to 10 jobs a the same time
  Autochanger = File1                 # point to ourself
}

# Definition of a second file Virtual Autochanger device
#   Possibly pointing to a different disk drive
Autochanger {
  Name = File2
# Do not use "localhost" here
  Address = localhost                # N.B. Use a fully qualified name here
  SDPort = 9103
  Password = "JVhZQ-8Z0gCxc0fU7VNNTYzLRyFwiL58E"
  Device = FileChgr2
  Media Type = File2
  Autochanger = File2                 # point to ourself
  Maximum Concurrent Jobs = 10        # run up to 10 jobs a the same time
}

# Definition of LTO-4 tape Autochanger device
#Autochanger {
#  Name = LTO-4
#  Do not use "localhost" here
#  Address = localhost               # N.B. Use a fully qualified name here
#  SDPort = 9103
#  Password = "JVhZQ-8Z0gCxc0fU7VNNTYzLRyFwiL58E"         # password for Storage daemon
#  Device = LTO-4                     # must be same as Device in Storage daemon
#  Media Type = LTO-4                 # must be same as MediaType in Storage daemon
#  Autochanger = LTO-4                # enable for autochanger device
#  Maximum Concurrent Jobs = 10
#}

# Generic catalog service
Catalog {   
  Name = MyCatalog   # наименование Bacula Catalog
  dbname = "bacula"; 
  # DB Address = "localhost";      # адрес сервера БД PostgreSQL
  # DB PORT = 5432                 # порт подключения на сервере
  # dbuser = "bacula";             # имя пользователя базы данных на сервере PostgreSQL
  # dbpassword = "pass9"           # пароль пользователя базы данных на сервере PostgreSQL
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address.
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

#
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = root = all, !skipped
  operator = root = mount
  console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "/var/log/bacula/bacula.log" = all, !skipped
  catalog = all
}


#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root = all, !skipped
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
}







Storage {
  Name = brave-stor         # имя Хранилища
  Address = localhost       # fqdn имя или IP-адрес хранилища. localhost" использовать не рекомендуется
  Device = localstorage     # имя устройства хранения, описаное в файле bacula-sd.conf           
  SDPort = 9103             # порт оставляем стандартный
  Password = "1"            # пароль Хранилища
  Media Type = File1        # Должно соответствовать директиве Media Type ресурса Device настройки
}


# Default pool definition
Pool {
  Name = Default                      # имя пула, указывается в заданиях резервного копирования
  Pool Type = Backup                  # тип пула
  Recycle = yes                       # Bacula может автоматически очищать или перезаписывать тома пула
  AutoPrune = yes                     # удалять из БД записи о заданиях и файлах , срок хранения которых истёк в соответствии с Volume Retention 
  Volume Retention = 365 days         # период в течении которого информация о заданиях и файлах хранится в БД, по истечению удаляется
  Maximum Volume Bytes = 50G          # максимальный объем тома в пуле
  Maximum Volumes = 100               # максимальное количество томов в пуле
  Label Format = "Vol-"               # с каких символов начинаются имена томов пула
}

# File Pool definition
Pool {
  Name = File
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  Label Format = "Vol-"               # Auto label
}


# Scratch pool definition
Pool {
  Name = Scratch
  Pool Type = Backup
}

#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = brave-mon
  Password = "jS87Jz2_3zI7a9A9-0qlsM73mZZ7NVvG8"
  CommandACL = status, .status
}
